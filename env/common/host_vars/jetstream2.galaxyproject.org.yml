---
#
# WARNING: this is shared by both Test and Main
#

_jetstream_scratch_root: "/jetstream2/scratch/{{ galaxy_instance_codename }}"
_jetstream_galaxy_root: "/cvmfs/{{ galaxy_cvmfs_repo }}/galaxy"

host_packages:
  - python3.11

# TEMP until release of >0.15.5
#pulsar_package_name: "git+https://github.com/galaxyproject/pulsar.git@973f7b309565d4d0152abd468c952e17376217d4#egg=pulsar-app"
#pulsar_package_version: "{{ omit }}"
pulsar_root: "/srv/pulsar/{{ galaxy_instance_codename }}"
#galaxy_root: not required

## used by: galaxyproject.pulsar to set $GALAXY_HOME in local_env.sh
galaxy_server_dir: "{{ _jetstream_galaxy_root }}"

# Attempt to chown fails, let it create an empty dir instead
#pulsar_dependencies_dir: "/cvmfs/{{ galaxy_cvmfs_repo }}/deps"
_pulsar_dependencies_dir: "/cvmfs/{{ galaxy_cvmfs_repo }}/deps"
pulsar_persistence_dir: "{{ pulsar_root }}/var/persisted_data"
pulsar_staging_dir: "{{ _jetstream_scratch_root }}/jobs"

pulsar_separate_privileges: true
#galaxy_user: properly set in all.yml
pulsar_user: "{{ galaxy_user }}"
pulsar_privsep_user: root
pulsar_virtualenv_command: python3.11 -m venv
pip_extra_args: "--index-url https://wheels.galaxyproject.org/ --extra-index-url https://pypi.org/simple"

pulsar_pycurl_ssl_library: openssl
pulsar_systemd: true
pulsar_systemd_runner: webless
pulsar_systemd_service_name: "pulsar-{{ galaxy_instance_codename }}"
pulsar_systemd_service_options:
  LimitNOFILE: "4096:524288"
# TODO: why don't the conditionalized restart handlers in the role work?
pulsar_restart_handler_name: systemd restart pulsar

pulsar_drmaa_library_path: "/usr/lib64/libdrmaa.so"

pulsar_job_metrics_plugins:
  - type: core
  - type: cpuinfo
    verbose: true
  - type: meminfo
  - type: uname
  - type: cgroup

pulsar_yaml_config:
  staging_directory: "{{ pulsar_staging_dir }}"
  persistence_directory: "{{ pulsar_persistence_dir }}"
  tool_dependency_dir: "{{ _pulsar_dependencies_dir }}"
  #job_metrics_config_file: "{{ pulsar_config_dir }}/job_metrics_conf.xml"
  message_queue_url: "{{ pulsar_message_queue_url }}"
  sentry_dsn: "{{ pulsar_sentry_dsn }}"
  #ependency_resolvers_config_file: "{{ pulsar_config_dir }}/dependency_resolvers_conf.xml"
  maximum_stream_size: 1048576  # 1 MB
  amqp_acknowledge: True
  amqp_ack_republish_time: 180
  amqp_publish_retry: True
  amqp_publish_retry_max_retries: 5
  amqp_publish_retry_interval_start: 10
  amqp_publish_retry_interval_step: 10
  amqp_publish_retry_interval_max: 60
  dependency_resolution:
    resolvers:
      #- type: conda
      #  prefix: "{{ _pulsar_dependencies_dir }}/_conda"
      #- type: conda
      #  prefix: "{{ _jetstream_scratch_root }}/conda"
      #  auto_init: true
      #  auto_install: true
      #- type: tool_shed_packages
      - type: galaxy_packages
  managers:
    jetstream2:
      type: queued_drmaa
      preprocess_action_max_retries: 10
      preprocess_action_interval_start: 2
      preprocess_action_interval_step: 2
      preprocess_action_interval_max: 60
      postprocess_action_max_retries: 10
      postprocess_action_interval_start: 2
      postprocess_action_interval_step: 2
      postprocess_action_interval_max: 60
      min_polling_interval: 15
      galaxy_home: "{{ _jetstream_galaxy_root }}"
      galaxy_datatypes_config_file: "{{ _jetstream_galaxy_root }}/config/datatypes_conf.xml.sample"
